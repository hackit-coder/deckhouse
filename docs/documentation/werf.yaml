{{- if ne $.Env "development" -}}
{{- $_ := set . "Env" "EE" }}
{{- end }}

{{- $_ := set . "YQ4_VERSION" "v4.9.6" }}

---
project: deckhouse-web
configVersion: 1
---
# Base Images
{{ $_ := set . "Images" (.Files.Get "../../candi/image_versions.yml" | fromYaml) }}
  {{- range $k, $v := .Images }}
    {{ $baseImagePath := (printf "%s%s" $.Images.REGISTRY_PATH (trimSuffix "/" $v)) }}
    {{- if or (eq $.Env "development") (eq $.Env "module") }}
      {{ $baseImagePath = trimSuffix "/" $v | splitList "@" | first }}
    {{- end }}
    {{- if ne $k "REGISTRY_PATH" }}
      {{- $_ := set $.Images $k $baseImagePath }}
    {{- end }}
  {{- end }}
---
image: web
from: {{ .Images.BASE_NGINX_ALPINE }}
shell:
  setup:
  - |
    cat <<"EOD" > /etc/nginx/nginx.conf
    {{- .Files.Get ".werf/nginx.conf" | nindent 4 }}
    EOD
import:
- image: static-pages
  add: /app/_site
  to: /app
  before: setup
---
image: static-pages
from: {{ .Images.BASE_JEKYLL }}
fromCacheVersion: 20210713
docker:
  ENV:
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
shell:
  install:
    - |
        apk add rsync jq
        wget https://github.com/mikefarah/yq/releases/download/{{ .YQ4_VERSION }}/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq

        gem update --system 3.2.3
        gem install bundler -v 2.4.3

        cd /srv/jekyll-data/documentation/
        bundle install
  setup:
    - |
        set -x
        cd /srv/jekyll-data/documentation/
        ./modules_list.sh 1>_data/modules.yaml
        cat modules_menu_skip  | cut -d\- -f 2-  | jq -nRc '[inputs] | map({"name":.}) | {module_names:.}' > _data/exclude.json

        cp -rf /src/be/modules /src >& /dev/null
        cp -rf /src/se/modules /src >& /dev/null
        cp -rf /src/ee/modules /src >& /dev/null
        cp -rf /src/fe/modules /src >& /dev/null
        cp /src/modules/010-prometheus-crd/crds/*.yaml /src/modules/300-prometheus/crds
        rm -rf /src/modules/010-prometheus-crd

        export MODULES_SRC_DIR=/src/modules
        export MODULES_DST_EN=/srv/jekyll-data/documentation/modules_en
        export MODULES_DST_RU=/srv/jekyll-data/documentation/modules_ru
        bash ./modules_prepare.sh

        for i in $(find . -regex '.*.md' -print); do
          grep -q "^---" $i
          if [ $? -gt 0 ]; then continue; fi
          cat $i | tr -d '\n' | grep -lv "^---.*permalink: .*---" &> /dev/null
          if [ $? -eq 0 ]; then
            # permalink is absent, add permalink
            PERMALINK="/$(echo $i | sed -E 's#(modules_)(en|ru)/#\2/modules/#' | sed 's#docs/##g'| tr '[:upper:]' '[:lower:]' | sed 's#\.md$#.html#' | sed 's#^\.\/##' | sed 's#readme\.html$##' )"
            sed -i "1apermalink: $PERMALINK" $i
          fi
        done

        export MODULES_DIR=modules_en
        bash ./modules_generate_configuration.sh
        export MODULES_DIR=modules_ru MODULES_LANG=ru
        bash ./modules_generate_configuration.sh

        export MODULES_DIR=modules_en
        bash ./generate_cluster_configuration.sh
        export MODULES_DIR=modules_ru MODULES_LANG=ru
        bash ./generate_cluster_configuration.sh

        export MODULES_DIR=modules_en
        bash ./modules_generate_cr.sh
        export MODULES_DIR=modules_ru
        bash ./modules_generate_cr.sh

        export MODULES_DIR=/src/modules
        bash ./modules_generate_ossinfo.sh

        echo "default: \"$(grep "DefaultKubernetesVersion" -m 1 _data/dhctl-base.go | grep -Eo '[0-9.]+')\"" > _data/version_kubernetes.yml

        cd /srv/jekyll-data/documentation/_data/
        sed '/^bashible:/r version_map_addition.yml' version_map.yml >> supported_versions.yml

        yq e -j editions-source.yaml | jq -M 'reduce .editions[] as $item ({}; .[$item.name | ascii_downcase] = $item)' > editions.json

        grep -E '^\{\{- \$version' /src/registrypackages/werf.inc.yaml | sed -E 's/.+\"(.+)\".+/version: "\1"/' >> deckhouse-cli.yaml
        echo "Deckhouse CLI version: $(cat deckhouse-cli.yaml)"

        cd ..
        mkdir -m 777 -p /app/_site/
        {{- if eq $.Env "development" }}
        JEKYLL_ENV=development jekyll build -d /app/_site/ --profile -t
        {{- else }}
        JEKYLL_ENV=production jekyll build -d /app/_site/
        {{- end }}
git:
- add: /docs
  to: /srv/jekyll-data
  owner: jekyll
  group: jekyll
  includePaths:
    - site/_config.yml
    - site/_includes/head.html
    - site/Gemfile
    - site/Gemfile.lock
    - documentation
  excludePaths:
    - '**/werf*.yaml'
    - '**/docker-compose.yml'
    - '**/Makefile'
    - '**/.werf'
    - '**/.helm'
    - documentation/pages/internal
    - documentation/config
  stageDependencies:
    install: ['site/Gemfile','site/Gemfile.lock']
    setup: '**/*'
{{ tpl (.Files.Get "werf-git-section.inc.yaml") . }}
